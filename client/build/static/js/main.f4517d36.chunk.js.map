{"version":3,"sources":["util/request.js","components/Calc/Network.js","components/InputValidate.js","util/validation.js","components/Calc/Valid.js","util/format.js","store/calc.js","components/Calc/index.js","components/History/Network.js","store/history.js","components/History/index.js","App.js","store/index.js","index.js"],"names":["request","url","option","a","fetch","response","ok","json","errorCode","data","TypeError","errorMessage","error","Response","statusText","message","Promise","reject","getJsonAsync","method","postJsonAsync","body","JSON","stringify","headers","Network","search","InputValidate","id","label","value","validate","onChange","type","min","max","useState","undefined","setError","classInput","memberMin","memberMax","onHandleValidate","useCallback","e","target","htmlFor","className","onBlur","React","memo","digitValidate","str","test","digit","parseInt","isNullOrWhiteSpace","tinValidate","length","split","some","symbol","isNaN","Number","control_sum","slice","reduce","acc","s","i","control_sum_first","summ","index","part_second","part_first","Valid","company_name","company_tin","city","type_provision","users_count","archive_depth","type_storage","period_service","filter","x","ntl_number","Intl","NumberFormat","style","currency","ntl_datetime","DateTimeFormat","year","month","day","hour","minute","formatCurrency","number","format","formatDateTime","date","Date","declensionOfNumbers","n","n1","calcSlice","createSlice","name","initialState","archive_depths","type_storages","type_provisions","cities","cost_hdd_service","cost_ssd_service","missed_field","enable_save","reducers","loadInfo","state","payload","loadCities","setCompanyName","setCompanyTin","setUserCount","setPeriodService","setMissedFields","changeValArchiveDepth","changeValTypeStorage","changeValTypeProvision","changeValCity","loadCostTotal","clearStoreFields","type_storage_value","actions","MemoSelect","Select","Calc","showModalField","setShowModalField","show","title","modalInfo","setModalInfo","handleCloseField","handleCloseInfo","handleShowInfo","calc","useSelector","dispatch","useDispatch","getSelectOptionId","getSelectOptionName","getSelectOptionDepth","depth","onChangeCity","val","onChangeStorage","storage","onChangeProvision","provision","onChangeArchiveDepth","archiveDepth","searchCities","searchCitiesAsync","then","catch","err","onValidCompanyTin","validCompanyTin","onValidUsersCount","validUsersCount","onValidCompanyName","validCompanyName","onValidPeriodService","validPeriodService","onChangeUserCount","onChangeCompanyTin","onChangeCompanyName","onChangePeriodService","getTotal","useEffect","loadDirectoriesAsync","type_storage_id","archive_depth_id","sendCalculationAsync","Container","Row","Col","sm","md","Card","Header","Body","placeholder","options","onInputChange","getOptionValue","getOptionLabel","isClearable","isSearchable","Button","variant","onClick","city_id","type_provision_id","missedFields","getMissedFields","saveHistoryAsync","Modal","centered","onHide","animation","Title","map","nanoid","Footer","historySlice","requests","loadRequests","History","setSearch","history","searchAsync","onSearchHistory","query","onClearSearch","InputGroup","FormControl","tin","href","rel","create_at","city_name","cost_service_hdd","cost_service_ssd","App","activeClassName","to","exact","path","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f4517d36.chunk.js","sourcesContent":["async function request(url, option) {\r\n  try {\r\n    const response = await fetch(url, option);\r\n    if (!response.ok) throw response;\r\n    const json = await response.json();\r\n\r\n    if (json.errorCode === 0) {\r\n      return json.data;\r\n    } else {\r\n      throw TypeError(json.errorMessage);\r\n    }\r\n  } catch (e) {\r\n    const error = e instanceof Response\r\n      ? `${ e.statusText } [${ e.url }]`\r\n      : e instanceof TypeError ? e.message : e;\r\n    await Promise.reject(error);\r\n  }\r\n}\r\n\r\nexport const getJsonAsync = async (url) => request(url, { method: 'GET' });\r\nexport const postJsonAsync = async (url, body) => request(url, {\r\n  method : 'POST',\r\n  body   : JSON.stringify(body),\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n","import { getJsonAsync, postJsonAsync } from '../../util/request';\r\n\r\nexport default class Network {\r\n  static saveHistoryAsync(data) {\r\n    return postJsonAsync('/api/history/save', data);\r\n  }\r\n\r\n  static sendCalculationAsync(data) {\r\n    return postJsonAsync('/api/calc/calculating', data);\r\n  }\r\n\r\n  static loadDirectoriesAsync() {\r\n      return getJsonAsync('/api/calc/get_directory_info');\r\n  }\r\n\r\n  static searchCitiesAsync(search) {\r\n    return getJsonAsync(`/api/calc/get_cities_search?s=${ search }`);\r\n  }\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport React from 'react';\r\n\r\nfunction InputValidate({ id, label, value, validate, onChange, type = 'text', min, max }) {\r\n  const [error, setError] = useState(undefined);\r\n\r\n  let classInput = 'form-control';\r\n  let memberMin = '';\r\n  let memberMax = '';\r\n\r\n  if (error === null) classInput += ' is-valid';\r\n  if (!!error) classInput += ' is-invalid';\r\n  if (type === 'number') {\r\n    memberMin = min;\r\n    memberMax = max;\r\n  }\r\n\r\n  const onHandleValidate = useCallback(e => {\r\n    if (typeof onChange === 'function') {\r\n      onChange(e.target.value);\r\n    }\r\n    if (typeof validate === 'function') {\r\n      setError(validate(e.target.value));\r\n    }\r\n  }, [onChange, validate]);\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={ id }>{ label }</label>\r\n      <input id={ id }\r\n             type={ type }\r\n             value={ value }\r\n             min={ memberMin }\r\n             max={ memberMax }\r\n             className={ classInput }\r\n             onBlur={ onHandleValidate }\r\n             onChange={ onHandleValidate }\r\n      />\r\n      <div className=\"error-msg\">{ error }</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(InputValidate);\r\n","export function digitValidate(str, min, max) {\r\n  if (!/^-?\\d+$/.test(str)) return 'Введите число';\r\n  const digit = parseInt(str);\r\n  if (digit < min) return `Минимальное значение ${ min }`;\r\n  if (digit > max) return `Максимальное значение ${ max }`;\r\n  return null;\r\n}\r\n\r\nexport function isNullOrWhiteSpace(str) {\r\n  return str === null || /^\\s*$/.test(str);\r\n}\r\n\r\nexport function tinValidate(value) {\r\n  if (typeof value !== 'string'\r\n    || (value.length !== 10 && value.length !== 12)\r\n    || value.split('').some((symbol) => isNaN(Number(symbol)))) {\r\n    return false;\r\n  }\r\n\r\n  // Юрлицо\r\n  if (value.length === 10) {\r\n    const control_sum = value\r\n      .split('')\r\n      .slice(0, -1)\r\n      .reduce((acc, s, i) =>\r\n        [2, 4, 10, 3, 5, 9, 4, 6, 8][i] * Number(s) + acc, 0);\r\n    return Number(value[9]) === (control_sum % 11) % 10;\r\n    // Индивидуальный предприниматель\r\n  } else if (value.length === 12) {\r\n    const control_sum_first = value\r\n      .split('')\r\n      .slice(0, -2)\r\n      .reduce((summ, symbol, index) =>\r\n        [7, 2, 4, 10, 3, 5, 9, 4, 6, 8][index] * Number(symbol) + summ, 0);\r\n    const control_sum_second = value\r\n      .split('')\r\n      .slice(0, -1)\r\n      .reduce((summ, symbol, index) =>\r\n        [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8][index] * Number(symbol) + summ, 0);\r\n\r\n    const part_second = (control_sum_second % 11) % 10;\r\n    const part_first = (control_sum_first % 11) % 10;\r\n    return Number(value[10]) === part_first && Number(value[11]) === part_second;\r\n  }\r\n}\r\n\r\n","import { digitValidate, isNullOrWhiteSpace, tinValidate } from '../../util/validation';\r\n\r\nexport class Valid {\r\n  static getMissedFields(data) {\r\n    const missedFields = [\r\n      isNullOrWhiteSpace(data.company_name) ? 'Название компании' : '',\r\n      !tinValidate(data.company_tin) ? 'ИНН' : '',\r\n      data.city === null ? 'Город клиента' : '',\r\n      data.type_provision === null ? 'Какая услуга интересна' : '',\r\n      digitValidate(data.users_count, 1, 250) ? 'Количество пользователей' : '',\r\n      data.archive_depth === null ? 'Количество месяцев хранения данных' : '',\r\n      data.type_storage === null ? 'Тип жёсткого диска' : '',\r\n      digitValidate(data.period_service, 1) ? 'Период пользования услугой' : ''\r\n    ];\r\n    return missedFields.filter(x => x.length > 0);\r\n  }\r\n\r\n  static validCompanyName(s) {\r\n    return isNullOrWhiteSpace(s) ? 'Введите название компании' : null;\r\n  }\r\n\r\n  static validCompanyTin(s) {\r\n    return !tinValidate(s) ? 'ИНН не верное' : null\r\n  }\r\n\r\n  static validUsersCount(s) {\r\n    return digitValidate(s, 1, 250);\r\n  }\r\n\r\n  static validPeriodService(s) {\r\n    return digitValidate(s, 1)\r\n  }\r\n}\r\n","const ntl_number = new Intl.NumberFormat('ru', {\r\n  style   : 'currency',\r\n  currency: 'RUB'\r\n});\r\nconst ntl_datetime = new Intl.DateTimeFormat('ru', {\r\n  year  : 'numeric',\r\n  month : 'numeric',\r\n  day   : 'numeric',\r\n  hour  : 'numeric',\r\n  minute: 'numeric',\r\n});\r\n\r\nexport function formatCurrency(number) {\r\n  return ntl_number.format(number);\r\n}\r\n\r\nexport function formatDateTime(str) {\r\n  const date = new Date(str);\r\n  return ntl_datetime.format(date);\r\n}\r\n\r\nexport function declensionOfNumbers(number, ...words) {\r\n  number = Number(number);\r\n  if (Number.isNaN(number)) return null;\r\n  const n = number % 100;\r\n  const n1 = n % 10;\r\n  if (n > 10 && n < 20) return words[2];  // Родительный множ\r\n  if (n1 > 1 && n1 < 5) return words[1];  // Родительный\r\n  if (n1 === 1) return words[0];  // Именительный\r\n  return words[2];\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst calcSlice = createSlice({\r\n  name        : 'calc',\r\n  initialState: {\r\n    company_name    : '',\r\n    company_tin     : '',\r\n    users_count     : '1',\r\n    period_service  : '1',\r\n    archive_depths  : [],\r\n    type_storages   : [],\r\n    type_provisions : [],\r\n    cities          : [],\r\n    archive_depth   : null,\r\n    type_storage    : null,\r\n    type_provision  : null,\r\n    city            : null,\r\n    cost_hdd_service: null,\r\n    cost_ssd_service: null,\r\n    missed_field    : [],\r\n    enable_save     : false,\r\n  },\r\n  reducers    : {\r\n    loadInfo              : (state, { payload }) => {\r\n      state.archive_depths = payload.archive_depth;\r\n      state.type_storages = payload.type_storage;\r\n      state.type_provisions = payload.type_provision;\r\n      state.archive_depth = payload.archive_depth[0];\r\n      state.type_storage = payload.type_storage[0];\r\n      state.type_provision = payload.type_provision[0];\r\n    },\r\n    loadCities            : (state, { payload }) => {\r\n      state.cities = payload;\r\n    },\r\n    setCompanyName        : (state, { payload }) => {\r\n      state.company_name = payload;\r\n    },\r\n    setCompanyTin         : (state, { payload }) => {\r\n      state.company_tin = payload;\r\n    },\r\n    setUserCount          : (state, { payload }) => {\r\n      state.users_count = payload;\r\n    },\r\n    setPeriodService      : (state, { payload }) => {\r\n      state.period_service = payload;\r\n    },\r\n    setMissedFields       : (state, { payload }) => {\r\n      state.missed_field = payload;\r\n    },\r\n    changeValArchiveDepth : (state, { payload }) => {\r\n      state.archive_depth = payload;\r\n    },\r\n    changeValTypeStorage  : (state, { payload }) => {\r\n      state.type_storage = payload;\r\n    },\r\n    changeValTypeProvision: (state, { payload }) => {\r\n      state.type_provision = payload;\r\n    },\r\n    changeValCity         : (state, { payload }) => {\r\n      state.city = payload;\r\n    },\r\n    loadCostTotal         : (state, { payload }) => {\r\n      state.cost_hdd_service = payload.cost_hdd_service;\r\n      state.cost_ssd_service = payload.cost_ssd_service;\r\n    },\r\n    clearStoreFields      : (state) => {\r\n      state.company_name = '';\r\n      state.company_tin = '';\r\n      state.users_count = '1';\r\n      state.period_service = '1';\r\n      state.archive_depth = null;\r\n      state.type_storage_value = null;\r\n      state.type_provision = null;\r\n      state.city = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  loadInfo,\r\n  loadCities,\r\n  loadCostTotal,\r\n  setUserCount,\r\n  setCompanyTin,\r\n  setCompanyName,\r\n  setPeriodService,\r\n  setMissedFields,\r\n  changeValCity,\r\n  changeValTypeStorage,\r\n  changeValArchiveDepth,\r\n  changeValTypeProvision,\r\n  clearStoreFields\r\n} = calcSlice.actions;\r\nexport default calcSlice.reducer;\r\n","import './Calc.css';\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport Network from './Network';\r\nimport InputValidate from '../InputValidate';\r\nimport { Valid } from './Valid';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n} from 'react-redux';\r\nimport {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react';\r\nimport {\r\n  formatCurrency,\r\n  declensionOfNumbers,\r\n} from '../../util/format';\r\nimport {\r\n  loadInfo,\r\n  loadCities,\r\n  setUserCount,\r\n  loadCostTotal,\r\n  changeValCity,\r\n  setCompanyTin,\r\n  setCompanyName,\r\n  setMissedFields,\r\n  clearStoreFields,\r\n  setPeriodService,\r\n  changeValTypeStorage,\r\n  changeValArchiveDepth,\r\n  changeValTypeProvision,\r\n} from '../../store/calc';\r\nimport {\r\n  Container, Row, Col,\r\n  Card, Modal, Button\r\n} from 'react-bootstrap';\r\n\r\nconst MemoSelect = React.memo(Select);\r\n\r\nfunction Calc() {\r\n  const [error, setError] = useState(null);\r\n  const [showModalField, setShowModalField] = useState(false);\r\n  const [modalInfo, setModalInfo] = useState({\r\n    show : false,\r\n    title: '',\r\n    body : ''\r\n  });\r\n  const handleShowField = () => setShowModalField(true);\r\n  const handleCloseField = () => setShowModalField(false);\r\n  const handleCloseInfo = () => setModalInfo({ show: false, title: '', body: '' });\r\n  const handleShowInfo = (title, body) => setModalInfo({ show: true, title: title, body: body });\r\n\r\n  const calc = useSelector(state => state.calc);\r\n  const dispatch = useDispatch();\r\n\r\n  const getSelectOptionId = useCallback(({ id }) => id, []);\r\n  const getSelectOptionName = useCallback(({ name }) => name, []);\r\n  const getSelectOptionDepth = useCallback(({ depth }) => depth, []);\r\n  const onChangeCity = useCallback(val => dispatch(changeValCity(val)), [dispatch]);\r\n  const onChangeStorage = useCallback((storage) => dispatch(changeValTypeStorage(storage)), [dispatch]);\r\n  const onChangeProvision = useCallback((provision) => dispatch(changeValTypeProvision(provision)), [dispatch]);\r\n  const onChangeArchiveDepth = useCallback((archiveDepth) => dispatch(changeValArchiveDepth(archiveDepth)), [dispatch]);\r\n  const searchCities = useCallback((search) => {\r\n    if (typeof search !== 'string' || search.length < 3) {\r\n      return;\r\n    }\r\n    Network\r\n      .searchCitiesAsync(search)\r\n      .then(data => dispatch(loadCities(data)))\r\n      .then(() => setError(null))\r\n      .catch(err => setError(err))\r\n  }, [dispatch]);\r\n  const onValidCompanyTin = useCallback(s => Valid.validCompanyTin(s), []);\r\n  const onValidUsersCount = useCallback(s => Valid.validUsersCount(s), []);\r\n  const onValidCompanyName = useCallback(s => Valid.validCompanyName(s), []);\r\n  const onValidPeriodService = useCallback(s => Valid.validPeriodService(s), []);\r\n\r\n  const onChangeUserCount = useCallback(s => dispatch(setUserCount(s)), [dispatch]);\r\n  const onChangeCompanyTin = useCallback(s => dispatch(setCompanyTin(s)), [dispatch]);\r\n  const onChangeCompanyName = useCallback(s => dispatch(setCompanyName(s)), [dispatch]);\r\n  const onChangePeriodService = useCallback(s => dispatch(setPeriodService(s)), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    Network\r\n      .loadDirectoriesAsync()\r\n      .then(data => dispatch(loadInfo(data)))\r\n      .then(() => setError(null))\r\n      .catch(err => setError(err));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCostTotal({\r\n      cost_hdd_service: 0,\r\n      cost_ssd_service: 0\r\n    }));\r\n\r\n    if (Valid.validUsersCount(calc.users_count)\r\n      || Valid.validPeriodService(calc.period_service)\r\n      || !(calc.type_storage && calc.type_storage.id)\r\n      || !(calc.archive_depth && calc.archive_depth.id)) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      users_count     : calc.users_count,\r\n      period_service  : calc.period_service,\r\n      type_storage_id : calc.type_storage && calc.type_storage.id,\r\n      archive_depth_id: calc.archive_depth && calc.archive_depth.id\r\n    };\r\n\r\n    Network\r\n      .sendCalculationAsync(data)\r\n      .then(data => dispatch(loadCostTotal(data)))\r\n      .then(() => setError(null))\r\n      .catch(err => setError(err));\r\n  }, [\r\n    dispatch,\r\n    calc.users_count,\r\n    calc.period_service,\r\n    calc.type_storage,\r\n    calc.archive_depth\r\n  ]);\r\n\r\n  function getTotal(type_storage, currency) {\r\n    return currency\r\n      ?\r\n      (\r\n        <div className=\"total-cost\">\r\n          <span className=\"pe-4\">\r\n            Стоимость услуги с использованием диска { type_storage } на { calc.period_service } мес.\r\n            для { calc.users_count } { declensionOfNumbers(calc.users_count, 'пользователя', 'пользователей', 'пользователей') }\r\n          </span>\r\n          <span className=\"currency\">{ formatCurrency(currency) }</span>\r\n        </div>\r\n      )\r\n      : null;\r\n  }\r\n\r\n  function saveInfo() {\r\n    const data = {\r\n      users_count      : calc.users_count,\r\n      company_tin      : calc.company_tin,\r\n      company_name     : calc.company_name,\r\n      period_service   : calc.period_service,\r\n      city_id          : calc.city.id,\r\n      type_storage_id  : calc.type_storage.id,\r\n      archive_depth_id : calc.archive_depth.id,\r\n      type_provision_id: calc.type_provision.id,\r\n    }\r\n    const missedFields = Valid.getMissedFields(data);\r\n    if (missedFields.length > 0) {\r\n      dispatch(setMissedFields(missedFields));\r\n      handleShowField();\r\n      return;\r\n    }\r\n\r\n    Network\r\n      .saveHistoryAsync(data)\r\n      .then(() => handleShowInfo('Сохранено', 'Информация о клиенте сохранена!'))\r\n      .catch((err) => handleShowInfo('Ошибка', `Произошла ошибка при сохранении\\n${ err }`));\r\n  }\r\n\r\n  function clearFields() {\r\n    dispatch(clearStoreFields());\r\n    handleShowInfo('Поля сброшены', 'Ok');\r\n  }\r\n\r\n  return (\r\n    <Container className=\"p-2\">\r\n      <h3 className=\"text-center mb-5\">Калькулятор по продукту \"Офисный контроль\"</h3>\r\n      { error ? <div className=\"m-3 p-3 error-info\">{ error }</div> : null }\r\n      <Row className=\"justify-content-center\">\r\n        <Col sm=\"12\" md=\"6\">\r\n          <Card>\r\n            <Card.Header>Основная информация о клиенте</Card.Header>\r\n            <Card.Body>\r\n              <InputValidate id=\"company_name\"\r\n                             label=\"Название компании:\"\r\n                             value={ calc.company_name }\r\n                             validate={ onValidCompanyName }\r\n                             onChange={ onChangeCompanyName }\r\n              />\r\n\r\n              <InputValidate id=\"company_tin\"\r\n                             label=\"ИНН:\"\r\n                             value={ calc.company_tin }\r\n                             validate={ onValidCompanyTin }\r\n                             onChange={ onChangeCompanyTin }\r\n              />\r\n\r\n              <label htmlFor=\"city_select\">Город клиента:</label>\r\n              <MemoSelect placeholder=\"Поиск от 3 символов\"\r\n                          value={ calc.city }\r\n                          onChange={ onChangeCity }\r\n                          options={ calc.cities }\r\n                          onInputChange={ searchCities }\r\n                          getOptionValue={ getSelectOptionId }\r\n                          getOptionLabel={ getSelectOptionName }\r\n                          isClearable={ true }\r\n                          isSearchable={ true }\r\n              />\r\n\r\n              <br/>\r\n\r\n              <label htmlFor=\"type_provision\">Какая услуга интересна:</label>\r\n              <MemoSelect placeholder=\"Выберите тип услуги\"\r\n                          value={ calc.type_provision }\r\n                          onChange={ onChangeProvision }\r\n                          options={ calc.type_provisions }\r\n                          getOptionValue={ getSelectOptionId }\r\n                          getOptionLabel={ getSelectOptionName }\r\n                          isSearchable={ false }\r\n              />\r\n\r\n              <br/>\r\n\r\n              <InputValidate id=\"users_count\"\r\n                             label=\"Количество пользователей:\"\r\n                             value={ calc.users_count }\r\n                             type=\"number\"\r\n                             min=\"1\" max=\"250\"\r\n                             validate={ onValidUsersCount }\r\n                             onChange={ onChangeUserCount }\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <br/>\r\n\r\n          <Card>\r\n            <Card.Header>Основные требования к оформлению облачного решения</Card.Header>\r\n            <Card.Body>\r\n              <label htmlFor=\"city_select\">Количество месяцев хранения данных (глубина архива):</label>\r\n              <MemoSelect placeholder=\"Выберите глубину\"\r\n                          value={ calc.archive_depth }\r\n                          options={ calc.archive_depths }\r\n                          onChange={ onChangeArchiveDepth }\r\n                          getOptionValue={ getSelectOptionId }\r\n                          getOptionLabel={ getSelectOptionDepth }\r\n                          isSearchable={ false }\r\n              />\r\n\r\n              <br/>\r\n\r\n              <label htmlFor=\"city_select\">Тип жёсткого диска:</label>\r\n              <MemoSelect placeholder=\"Выберите тип диска\"\r\n                          value={ calc.type_storage }\r\n                          options={ calc.type_storages }\r\n                          onChange={ onChangeStorage }\r\n                          getOptionValue={ getSelectOptionId }\r\n                          getOptionLabel={ getSelectOptionName }\r\n                          isSearchable={ false }\r\n              />\r\n              <br/>\r\n\r\n              <InputValidate id=\"period_use_service\"\r\n                             label=\"Период пользования услугой (месяцев):\"\r\n                             value={ calc.period_service }\r\n                             type=\"number\"\r\n                             min=\"1\"\r\n                             validate={ onValidPeriodService }\r\n                             onChange={ onChangePeriodService }\r\n              />\r\n\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <br/>\r\n\r\n          <Card>\r\n            <Card.Header>Итоговая стоимость облачного офисного контроля</Card.Header>\r\n            <Card.Body>\r\n              {\r\n                calc.cost_hdd_service || calc.cost_ssd_service\r\n                  ?\r\n                  <div>\r\n                    { getTotal('HDD', calc.cost_hdd_service) }\r\n                    { getTotal('SSD', calc.cost_ssd_service) }\r\n                  </div>\r\n                  :\r\n                  <div>Подсчёт...</div>\r\n              }\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <br/>\r\n\r\n          <div>\r\n            <Button variant=\"outline-success\" className=\"w-100\"\r\n                    onClick={ saveInfo }>\r\n              Сохранить информацию о заказе\r\n            </Button>\r\n          </div>\r\n\r\n          <br/>\r\n\r\n          <div>\r\n            <Button variant=\"outline-danger\" className=\"w-100\"\r\n                    onClick={ clearFields }>\r\n              Сбросить поля\r\n            </Button>\r\n          </div>\r\n\r\n        </Col>\r\n      </Row>\r\n      <Modal show={ showModalField } centered onHide={ handleCloseField } animation={ false }>\r\n        <Modal.Header>\r\n          <Modal.Title>Необходимо заполнить следующие поля</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ul>\r\n            { calc.missed_field.map(x => <li key={ nanoid() }>{ x }</li>) }\r\n          </ul>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={ handleCloseField }>\r\n            Ок\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={ modalInfo.show } centered onHide={ handleCloseInfo } animation={ false }>\r\n        <Modal.Header>\r\n          <Modal.Title>{ modalInfo.title }</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ul>\r\n            { modalInfo.body }\r\n          </ul>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={ handleCloseInfo }>\r\n            Ок\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Calc;\r\n","import { postJsonAsync } from '../../util/request';\r\n\r\nexport default class Network {\r\n  static searchAsync(data) {\r\n    return postJsonAsync('/api/history/search', data);\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst historySlice = createSlice({\r\n  name        : 'history',\r\n  initialState: {\r\n    requests: []\r\n  },\r\n  reducers    : {\r\n    loadRequests: (state, { payload }) => {\r\n      state.requests = payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { loadRequests } = historySlice.actions;\r\nexport default historySlice.reducer;\r\n","import './History.css';\r\nimport Network from './Network';\r\nimport { loadRequests } from '../../store/history';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { isNullOrWhiteSpace } from '../../util/validation';\r\nimport { formatCurrency, formatDateTime } from '../../util/format';\r\nimport { Col, Container, Row, InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nfunction History() {\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const history = useSelector(state => state.history);\r\n\r\n  useEffect(() => {\r\n    Network\r\n      .searchAsync()\r\n      .then(data => dispatch(loadRequests(data)))\r\n      .then(() => setError(null))\r\n      .catch(err => setError(err));\r\n  }, [dispatch]);\r\n\r\n  const onSearchHistory = useCallback(e => {\r\n    const value = e?.target?.value || '';\r\n    setSearch(value);\r\n\r\n    const data = {\r\n      query: value\r\n    };\r\n    Network\r\n      .searchAsync(data)\r\n      .then(data => dispatch(loadRequests(data)))\r\n      .then(() => setError(null))\r\n      .catch(err => setError(err));\r\n  }, [dispatch]);\r\n\r\n  const onClearSearch = useCallback(() => onSearchHistory(null), [onSearchHistory]);\r\n\r\n\r\n  function getTotal(type_storage, currency) {\r\n    return currency\r\n      ? <div>Стоимость с HDD: <span className=\"currency\">{ formatCurrency(currency) }</span></div>\r\n      : null\r\n  }\r\n\r\n  function request(data) {\r\n    return (\r\n      <div key={ data.id } className=\"mb-4 border border-secondary rounded p-2\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <span>{ data.company_name }, ИНН { data.tin }</span>\r\n          <a href={ `/api/history/download?order_id=${ data.id }` }\r\n             target=\"_blank\" rel=\"noreferrer\"\r\n             className=\"btn btn-sm btn-outline-secondary\">\r\n            Экспорт\r\n          </a>\r\n        </div>\r\n        <div className=\"request-time\">{ formatDateTime(data.create_at) }</div>\r\n        <hr/>\r\n        <div>Город: { data.city_name }</div>\r\n        <div>Количество пользователей: { data.users_count }</div>\r\n        <div>Глубина архива: { data.archive_depth } мес.</div>\r\n        <div>Период пользования: { data.period_service } мес.</div>\r\n        <div>{ getTotal('HDD', data.cost_service_hdd) }</div>\r\n        <div>{ getTotal('SSD', data.cost_service_ssd) }</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"p-2\">\r\n      <h3 className=\"text-center mb-5\">Ранее произведённые расчёты</h3>\r\n      { error ? <div className=\"m-3 p-3 error-info\">{ error }</div> : null }\r\n      <Row className=\"justify-content-center\">\r\n        <Col sm=\"12\" md=\"6\">\r\n          <InputGroup>\r\n            <FormControl value={ search }\r\n                         placeholder=\"Поиск от трёх символов\"\r\n                         onChange={ onSearchHistory }\r\n            />\r\n            {\r\n              !isNullOrWhiteSpace(search)\r\n                ?\r\n                (\r\n                  <Button variant=\"outline-danger\" onClick={ onClearSearch }>\r\n                    Очистить\r\n                  </Button>\r\n                )\r\n                : null\r\n            }\r\n          </InputGroup>\r\n\r\n          <br/>\r\n\r\n          {\r\n            history\r\n              .requests\r\n              .map(x => request(x))\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, NavLink, Route, Switch } from 'react-router-dom';\nimport Calc from './components/Calc';\nimport History from './components/History';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <nav className=\"nav nav-tabs justify-content-center\">\n          <div className=\"nav-item\">\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/\" exact>Калькулятор</NavLink>\n          </div>\n          <div className=\"nav-item\">\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/history\">История</NavLink>\n          </div>\n        </nav>\n      </>\n      <>\n        <Switch>\n          <Route exact path=\"/\">\n            <Calc/>\n          </Route>\n          <Route path=\"/history\">\n            <History/>\n          </Route>\n          <Route path=\"*\">\n            <div className=\"text-center mt-4\">\n              Страница не найдена\n            </div>\n          </Route>\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport calcSlice from './calc';\r\nimport historySlice from './history';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    calc   : calcSlice,\r\n    history: historySlice\r\n  }\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}